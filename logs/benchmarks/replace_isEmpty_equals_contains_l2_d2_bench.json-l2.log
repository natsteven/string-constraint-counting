** Time elapsed: .561539356 seconds **
Using input graph.... : /home/nathanael/Documents/SMT_to_JSON/GenJSONs/benchmarks/replace_isEmpty_equals_contains_l2_d2_bench.json
Using input length... : 2
Using solver......... : Inverse
Using reporter....... : Inverse
Using automata....... : Acyclic

[IGEN] ID	ACT	SING	TSAT	FSAT	DSJ	IN ID	IN CT	T CT	F CT	OLP	PRE
findChar A replaceChar B
findChar C replaceChar B
findChar B replaceChar C
findChar A replaceChar C
findChar C replaceChar B
findChar C replaceChar A
findChar C replaceChar B
findChar B replaceChar C
findChar A replaceChar B
findChar A replaceChar C
findChar A replaceChar C
findChar B replaceChar C
findChar B replaceChar C
findChar C replaceChar A
findChar B replaceChar A
findChar C replaceChar A
findChar C replaceChar B
findChar A replaceChar C
findChar A replaceChar B
findChar B replaceChar A
[IGEN] 29	false	false	true	true	yes	4	13	1	12	0	<S:4> = <init>{1948}	 -> 	[29]<S:4>.isEmpty(){2032}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are []
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] 
Solving using BFS
[29]
Q [29]
[29]
actuall [4, 29]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [29]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
node: [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 29 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [29]
EVALUATE INPUT 4 ...
DEBUG INIT_SYM 4 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 8
INPUT ID: 4  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 31	false	false	true	true	yes	8	13	1	12	0	<S:8> = <init>{56}	 -> 	[31]<S:8>.equals("B"){137}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] 
Solving using BFS
[29, 31]
Q [31]
[29, 31]
actuall [8, 30, 31]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [31]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [31]
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
node: [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]
parents are: []

BFS EVALUATE PREDICATE 31 ...
original is null
reslut [true,true]
node: [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [31]
EVALUATE CONCRETE VALUE 30 ...
reslut [true,true]
node: [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [31]
EVALUATE INPUT 8 ...
DEBUG INIT_SYM 8 solutions .... AA BB CC A AB BC AC C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 8  COUNT: 12  VALUE(S): AA BB CC A AB BC AC C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 33	false	false	true	true	yes	5	13	1	12	0	<S:5> = <init>{64}	 -> 	[33]<S:5>.contains("BB"){501}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] 
Solving using BFS
[29, 31, 33]
Q [33]
[29, 31, 33]
actuall [32, 33, 5]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [33]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [33]
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
node: [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]
parents are: []

BFS EVALUATE PREDICATE 33 ...
arg INIT_CON
oper INIT_SYM
reslut [true,true]
node: [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [33]
EVALUATE CONCRETE VALUE 32 ...
reslut [true,true]
node: [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [33]
EVALUATE INPUT 5 ...
DEBUG INIT_SYM 5 solutions .... AA CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 5  COUNT: 12  VALUE(S): AA CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 34	false	false	true	true	yes	7	13	1	12	0	<S:7> = <init>{55}	 -> 	[34]<S:7>.isEmpty(){138}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] 
Solving using BFS
[29, 31, 33, 34]
Q [34]
[29, 31, 33, 34]
actuall [34, 7]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 36	false	false	true	true	yes	6	13	1	12	0	<S:6> = <init>{56}	 -> 	[36]<S:6>.equals(""){119}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36]
Q [36]
[29, 31, 33, 34, 36]
actuall [35, 36, 6]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [36]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 1
INPUT ID: 6  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 37	false	false	true	true	yes	10	7	1	6	0	<S:4> = <init>{1948}	 -> 	[10]<S:4>.replace('C', 'B'){675}	 -> 	[37]<S:10>.isEmpty(){2675}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37]
Q [29, 37]
[29, 31, 33, 34, 36, 37]
actuall [2, 3, 4, 37, 10, 29]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [10, 29]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [37]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
node: [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 37 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 29 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [37]
EVALUATE TREPLACE CHAR 10 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [10, 29]
EVALUATE INPUT 4 ...
DEBUG INIT_SYM 4 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 4  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 39	false	false	true	true	yes	13	7	1	6	0	<S:7> = <init>{55}	 -> 	[13]<S:7>.replace('C', 'B'){407}	 -> 	[39]<S:13>.equals(""){511}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39]
Q [34, 39]
[29, 31, 33, 34, 36, 37, 39]
actuall [34, 2, 3, 38, 7, 39, 13]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [13]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [13]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 41	false	false	true	true	yes	9	7	4	3	0	<S:5> = <init>{64}	 -> 	[9]<S:5>.replace('A', 'B'){2411}	 -> 	[41]<S:9>.contains("B"){2704}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41]
Q [33, 41]
[29, 31, 33, 34, 36, 37, 39, 41]
actuall [32, 33, 1, 2, 5, 40, 41, 9]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [9]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [9]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [33, 9]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 [41]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [33]
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [41]
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
node: [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]
parents are: []

BFS EVALUATE PREDICATE 41 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [41]
EVALUATE CONCRETE VALUE 40 ...
reslut [true,true]
node: [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]
parents are: []

BFS EVALUATE PREDICATE 33 ...
arg INIT_CON
oper INIT_SYM
reslut [true,true]
node: [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [33]
EVALUATE CONCRETE VALUE 32 ...
reslut [true,true]
node: [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]
parents are: [41]
EVALUATE TREPLACE CHAR 9 ...
resModel [CC, C]
find A replace B
resModelInter [CC, C]
reslut [true,true]
node: [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [33, 9]
EVALUATE INPUT 5 ...
DEBUG INIT_SYM 5 solutions .... CC C 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 5  COUNT: 3  VALUE(S): CC C 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 42	false	false	true	true	yes	16	7	1	6	0	<S:6> = <init>{56}	 -> 	[16]<S:6>.replace('B', 'C'){471}	 -> 	[42]<S:16>.isEmpty(){572}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42]
Q [36, 42]
[29, 31, 33, 34, 36, 37, 39, 41, 42]
actuall [16, 2, 35, 3, 36, 6, 42]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 6  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 44	false	false	true	true	yes	11	7	1	6	0	<S:7> = <init>{55}	 -> 	[11]<S:7>.replace('B', 'C'){639}	 -> 	[44]<S:11>.equals(""){739}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are []
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44]
Q [34, 39, 44]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44]
actuall [34, 2, 3, 38, 7, 39, 11, 43, 44, 13]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 46	false	false	true	true	yes	12	7	4	3	0	<S:6> = <init>{56}	 -> 	[12]<S:6>.replace('A', 'C'){437}	 -> 	[46]<S:12>.contains("B"){712}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46]
Q [36, 42, 46]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46]
actuall [16, 1, 2, 35, 3, 36, 6, 42, 12, 45, 46]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 16]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36, 12]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [46]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [46]
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
node: [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]
parents are: []

BFS EVALUATE PREDICATE 46 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [46]
EVALUATE CONCRETE VALUE 45 ...
reslut [true,true]
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [46]
EVALUATE TREPLACE CHAR 12 ...
resModel [AA, CC, A, AC, C, CA]
find A replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36, 12]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA CC A AC C CA 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 6  COUNT: 6  VALUE(S): AA CC A AC C CA 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 47	false	false	true	true	yes	14	7	1	6	0	<S:6> = <init>{56}	 -> 	[14]<S:6>.replace('C', 'A'){462}	 -> 	[47]<S:14>.isEmpty(){555}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47]
Q [36, 42, 46, 47]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47]
actuall [1, 2, 35, 3, 36, 6, 42, 12, 45, 46, 14, 47, 16]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14, 16]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36, 12, 14]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [46]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [47]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [46]
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
node: [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 47 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]
parents are: []

BFS EVALUATE PREDICATE 46 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [46]
EVALUATE CONCRETE VALUE 45 ...
reslut [true,true]
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [47]
EVALUATE TREPLACE CHAR 14 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace A
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [46]
EVALUATE TREPLACE CHAR 12 ...
resModel [AA, CC, A, AC, C, CA]
find A replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36, 12, 14]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA CC A AC C CA 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 6  COUNT: 6  VALUE(S): AA CC A AC C CA 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 49	false	false	false	true	yes	15	7	0	7	0	<S:4> = <init>{1948}	 -> 	[15]<S:4>.replace('C', 'B'){412}	 -> 	[49]<S:15>.equals("CB"){2407}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are []
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49]
Q [29, 37, 49]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49]
actuall [48, 49, 2, 3, 4, 37, 10, 29, 15]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [10, 29, 15]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [37]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [49]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [49]
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
node: [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]
parents are: []

BFS EVALUATE PREDICATE 49 ...
original is null
reslut [true,true]
node: [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [49]
EVALUATE CONCRETE VALUE 48 ...
reslut [true,true]
node: [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 37 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 29 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [49]
EVALUATE TREPLACE CHAR 15 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [37]
EVALUATE TREPLACE CHAR 10 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [10, 29, 15]
EVALUATE INPUT 4 ...
DEBUG INIT_SYM 4 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 4  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 51	true	false	true	false	yes	17	7	7	0	0	<S:5> = <init>{64}	 -> 	[17]<S:5>.replace('A', 'B'){382}	 -> 	[51]<S:17>.contains(""){845}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51]
Q [33, 41, 51]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51]
actuall [32, 33, 1, 17, 2, 50, 51, 5, 40, 41, 9]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [17, 9]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [9, 17]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [17, 33, 9]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 [41]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 [51]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [33]
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [41]
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [51]
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
node: [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]
parents are: []

BFS EVALUATE PREDICATE 51 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [51]
EVALUATE CONCRETE VALUE 50 ...
reslut [true,true]
node: [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]
parents are: []

BFS EVALUATE PREDICATE 41 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [41]
EVALUATE CONCRETE VALUE 40 ...
reslut [true,true]
node: [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]
parents are: []

BFS EVALUATE PREDICATE 33 ...
arg INIT_CON
oper INIT_SYM
reslut [true,true]
node: [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [33]
EVALUATE CONCRETE VALUE 32 ...
reslut [true,true]
node: [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]
parents are: [51]
EVALUATE TREPLACE CHAR 17 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace B
resModelInter [AA, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]
parents are: [41]
EVALUATE TREPLACE CHAR 9 ...
resModel [CC, C]
find A replace B
resModelInter [CC, C]
reslut [true,true]
node: [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [17, 33, 9]
EVALUATE INPUT 5 ...
DEBUG INIT_SYM 5 solutions .... CC C 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 5  COUNT: 3  VALUE(S): CC C 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 52	false	false	true	true	yes	18	7	1	6	0	<S:7> = <init>{55}	 -> 	[18]<S:7>.replace('A', 'C'){498}	 -> 	[52]<S:18>.isEmpty(){581}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are []
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52]
Q [34, 39, 44, 52]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52]
actuall [1, 34, 2, 3, 38, 7, 39, 11, 43, 44, 13, 18, 52]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [18]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 18]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [18, 34, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [52]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
node: [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 52 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [52]
EVALUATE TREPLACE CHAR 18 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [18, 34, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 53	false	false	true	true	yes	28	3	1	2	0	<S:4> = <init>{1948}	 -> 	[15]<S:4>.replace('C', 'B'){412}	 -> 	[28]<S:15>.replace('B', 'A'){353}	 -> 	[53]<S:28>.isEmpty(){2753}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53]
Q [29, 37, 49, 53]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53]
actuall [48, 49, 1, 2, 3, 4, 37, 53, 10, 28, 29, 15]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15, 28]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [10, 29, 15]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [37]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [49, 28]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 [53]
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [49]
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
node: [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 53 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]
parents are: []

BFS EVALUATE PREDICATE 49 ...
original is null
reslut [true,true]
node: [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [49]
EVALUATE CONCRETE VALUE 48 ...
reslut [true,true]
node: [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 37 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 29 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]
parents are: [53]
EVALUATE TREPLACE CHAR 28 ...
resModel [AA, BB, A, AB, B, BA]
find B replace A
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [49, 28]
EVALUATE TREPLACE CHAR 15 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [37]
EVALUATE TREPLACE CHAR 10 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [10, 29, 15]
EVALUATE INPUT 4 ...
DEBUG INIT_SYM 4 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 2
INPUT ID: 4  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 55	false	false	false	true	yes	21	7	0	7	0	<S:6> = <init>{56}	 -> 	[14]<S:6>.replace('C', 'A'){462}	 -> 	[21]<S:14>.replace('B', 'C'){566}	 -> 	[55]<S:21>.equals("BC"){1127}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are []
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55]
Q [36, 42, 46, 47, 55]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55]
actuall [1, 2, 35, 3, 36, 6, 42, 12, 45, 46, 14, 47, 16, 21, 54, 55]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16, 21]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14, 16, 21]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36, 12, 14]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [46]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [21, 47]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 [55]
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [46]
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [55]
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
node: [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]
parents are: []

BFS EVALUATE PREDICATE 55 ...
original is null
reslut [true,true]
node: [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [55]
EVALUATE CONCRETE VALUE 54 ...
reslut [true,true]
node: [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 47 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]
parents are: []

BFS EVALUATE PREDICATE 46 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [46]
EVALUATE CONCRETE VALUE 45 ...
reslut [true,true]
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]
parents are: [55]
EVALUATE TREPLACE CHAR 21 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [21, 47]
EVALUATE TREPLACE CHAR 14 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace A
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [46]
EVALUATE TREPLACE CHAR 12 ...
resModel [AA, CC, A, AC, C, CA]
find A replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36, 12, 14]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA CC A AC C CA 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 6  COUNT: 6  VALUE(S): AA CC A AC C CA 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 57	false	false	true	true	yes	24	7	1	6	0	<S:4> = <init>{1948}	 -> 	[10]<S:4>.replace('C', 'B'){675}	 -> 	[24]<S:10>.replace('C', 'A'){411}	 -> 	[57]<S:24>.contains("AA"){3225}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are []
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57]
Q [29, 37, 49, 53, 57]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57]
actuall [1, 2, 3, 4, 37, 10, 15, 48, 49, 53, 24, 56, 57, 28, 29]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [24, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15, 28]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [10, 15, 24]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [10, 29, 15]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [37, 24]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 [49, 28]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 [57]
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 [53]
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [49]
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [57]
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
node: [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]
parents are: []

BFS EVALUATE PREDICATE 57 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [57]
EVALUATE CONCRETE VALUE 56 ...
reslut [true,true]
node: [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 53 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]
parents are: []

BFS EVALUATE PREDICATE 49 ...
original is null
reslut [true,true]
node: [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [49]
EVALUATE CONCRETE VALUE 48 ...
reslut [true,true]
node: [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 37 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 29 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]
parents are: [53]
EVALUATE TREPLACE CHAR 28 ...
resModel [AA, BB, A, AB, B, BA]
find B replace A
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]
parents are: [57]
EVALUATE TREPLACE CHAR 24 ...
resModel [BB, A, AB, BC, B, C, BA, CB]
find C replace A
resModelInter [BB, A, AB, B, BA]
reslut [true,true]
node: [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [49, 28]
EVALUATE TREPLACE CHAR 15 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]
parents are: [37, 24]
EVALUATE TREPLACE CHAR 10 ...
resModel [BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [10, 29, 15]
EVALUATE INPUT 4 ...
DEBUG INIT_SYM 4 solutions .... BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 4  COUNT: 11  VALUE(S): BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 58	false	false	true	true	yes	23	7	1	6	0	<S:7> = <init>{55}	 -> 	[18]<S:7>.replace('A', 'C'){498}	 -> 	[23]<S:18>.replace('B', 'A'){443}	 -> 	[58]<S:23>.isEmpty(){1021}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are []
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58]
Q [34, 39, 44, 52, 58]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58]
actuall [1, 34, 2, 3, 38, 7, 39, 11, 43, 44, 13, 18, 52, 23, 58]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [18, 23]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 23]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 18]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 18, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [52, 23]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 [58]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
node: [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 58 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 52 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]
parents are: [58]
EVALUATE TREPLACE CHAR 23 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace A
resModelInter [BB, CC, BC, B, C, CB]
reslut [true,true]
node: [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [52, 23]
EVALUATE TREPLACE CHAR 18 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 18, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 60	false	false	true	true	yes	19	7	1	6	0	<S:5> = <init>{64}	 -> 	[9]<S:5>.replace('A', 'B'){2411}	 -> 	[19]<S:9>.replace('A', 'C'){393}	 -> 	[60]<S:19>.equals("BB"){2908}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60]
Q [33, 41, 51, 60]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60]
actuall [32, 33, 1, 2, 3, 5, 40, 41, 9, 17, 50, 51, 19, 59, 60]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [17, 19, 9]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [9, 17]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [19]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [33, 17, 9]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 [19, 41]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 [51]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 [60]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [33]
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [41]
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [51]
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [60]
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
node: [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]
parents are: []

BFS EVALUATE PREDICATE 60 ...
original is null
reslut [true,true]
node: [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [60]
EVALUATE CONCRETE VALUE 59 ...
reslut [true,true]
node: [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]
parents are: []

BFS EVALUATE PREDICATE 51 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [51]
EVALUATE CONCRETE VALUE 50 ...
reslut [true,true]
node: [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]
parents are: []

BFS EVALUATE PREDICATE 41 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [41]
EVALUATE CONCRETE VALUE 40 ...
reslut [true,true]
node: [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]
parents are: []

BFS EVALUATE PREDICATE 33 ...
arg INIT_CON
oper INIT_SYM
reslut [true,true]
node: [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [33]
EVALUATE CONCRETE VALUE 32 ...
reslut [true,true]
node: [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]
parents are: [60]
EVALUATE TREPLACE CHAR 19 ...
resModel [AA, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [CC, C]
reslut [true,true]
node: [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]
parents are: [51]
EVALUATE TREPLACE CHAR 17 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace B
resModelInter [AA, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]
parents are: [19, 41]
EVALUATE TREPLACE CHAR 9 ...
resModel [CC, C]
find A replace B
resModelInter [CC, C]
reslut [true,true]
node: [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [33, 17, 9]
EVALUATE INPUT 5 ...
DEBUG INIT_SYM 5 solutions .... CC C 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 5  COUNT: 3  VALUE(S): CC C 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 62	false	false	false	true	yes	20	7	0	7	0	<S:7> = <init>{55}	 -> 	[11]<S:7>.replace('B', 'C'){639}	 -> 	[20]<S:11>.replace('B', 'C'){475}	 -> 	[62]<S:20>.contains("B"){1320}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are []
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
Parents  [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-61
[IGEN] [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]	contains!!Ljava/lang/CharSequence;!:!0(0)-62
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62]
Q [34, 39, 44, 52, 58, 62]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62]
actuall [1, 34, 2, 3, 38, 7, 39, 11, 43, 44, 13, 18, 52, 20, 23, 58, 61, 62]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 28, 12, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [18, 23]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 20, 23]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 18, 20]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 18, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [20, 44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [52, 23]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [62]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 [62]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 [58]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [62]
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [62]
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]1 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]2 []
node: [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]
parents are: []

BFS EVALUATE PREDICATE 62 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [62]
EVALUATE CONCRETE VALUE 61 ...
reslut [true,true]
node: [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 58 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 52 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]
parents are: [58]
EVALUATE TREPLACE CHAR 23 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace A
resModelInter [BB, CC, BC, B, C, CB]
reslut [true,true]
node: [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]
parents are: [62]
EVALUATE TREPLACE CHAR 20 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [52, 23]
EVALUATE TREPLACE CHAR 18 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [20, 44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 18, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 63	false	false	true	true	yes	26	7	1	6	0	<S:6> = <init>{56}	 -> 	[14]<S:6>.replace('C', 'A'){462}	 -> 	[26]<S:14>.replace('A', 'C'){402}	 -> 	[63]<S:26>.isEmpty(){944}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]]
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are []
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
Parents  [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61] are []
Parents  [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-61
[IGEN] [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]	contains!!Ljava/lang/CharSequence;!:!0(0)-62
[IGEN] [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]	isEmpty!!!:!0(0)-63
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63]
Q [36, 42, 46, 47, 55, 63]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63]
actuall [1, 2, 35, 3, 36, 6, 42, 12, 45, 46, 14, 47, 16, 21, 54, 55, 26, 63]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [26, 12, 14]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16, 21]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14, 16, 21, 26]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36, 12, 14]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [18, 34, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [46]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [21, 26, 47]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [62]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 [55]
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [63]
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 [63]
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [46]
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [55]
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [62]
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]1 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]2 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]1 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]2 []
node: [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 63 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]
parents are: []

BFS EVALUATE PREDICATE 55 ...
original is null
reslut [true,true]
node: [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [55]
EVALUATE CONCRETE VALUE 54 ...
reslut [true,true]
node: [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 47 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]
parents are: []

BFS EVALUATE PREDICATE 46 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [46]
EVALUATE CONCRETE VALUE 45 ...
reslut [true,true]
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]
parents are: [63]
EVALUATE TREPLACE CHAR 26 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]
parents are: [55]
EVALUATE TREPLACE CHAR 21 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [21, 26, 47]
EVALUATE TREPLACE CHAR 14 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace A
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [46]
EVALUATE TREPLACE CHAR 12 ...
resModel [AA, CC, A, AC, C, CA]
find A replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36, 12, 14]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA CC A AC C CA 
reslut [true,true]

SOLUTION TIME ms: 3
INPUT ID: 6  COUNT: 6  VALUE(S): AA CC A AC C CA 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 65	false	false	false	true	yes	27	3	0	3	0	<S:7> = <init>{55}	 -> 	[13]<S:7>.replace('C', 'B'){407}	 -> 	[27]<S:13>.replace('A', 'B'){348}	 -> 	[65]<S:27>.equals("A"){840}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are []
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]]
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
Parents  [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61] are []
Parents  [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1] are []
Parents  [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [65] 	EQUALS         	BASE(N): [27] 		ARG: [64] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-61
[IGEN] [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]	contains!!Ljava/lang/CharSequence;!:!0(0)-62
[IGEN] [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]	isEmpty!!!:!0(0)-63
[IGEN] [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-64
[IGEN] [65] 	EQUALS         	BASE(N): [27] 		ARG: [64]	equals!!Ljava/lang/Object;!:!0(0)-65
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65]
Q [34, 39, 44, 52, 58, 62, 65]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65]
actuall [64, 1, 65, 34, 2, 3, 38, 7, 39, 11, 43, 44, 13, 18, 52, 20, 23, 58, 27, 61, 62]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [18, 23, 27]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 20, 23, 27]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 18, 20]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 18, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [20, 44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39, 27]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [52, 23]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [62]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 [62]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 [58]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [63]
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 [65]
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 [65]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [62]
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [62]
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]1 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]2 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]1 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]2 []
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [65]
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [65]
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]1 []
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]2 []
node: [65] 	EQUALS         	BASE(N): [27] 		ARG: [64]
parents are: []

BFS EVALUATE PREDICATE 65 ...
original is null
reslut [true,true]
node: [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [65]
EVALUATE CONCRETE VALUE 64 ...
reslut [true,true]
node: [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]
parents are: []

BFS EVALUATE PREDICATE 62 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [62]
EVALUATE CONCRETE VALUE 61 ...
reslut [true,true]
node: [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 58 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 52 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]
parents are: [65]
EVALUATE TREPLACE CHAR 27 ...
resModel [AA, BB, A, AB, B, BA]
find A replace B
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]
parents are: [58]
EVALUATE TREPLACE CHAR 23 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace A
resModelInter [BB, CC, BC, B, C, CB]
reslut [true,true]
node: [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]
parents are: [62]
EVALUATE TREPLACE CHAR 20 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [52, 23]
EVALUATE TREPLACE CHAR 18 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39, 27]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [20, 44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 18, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 4
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 67	true	false	true	false	yes	25	7	7	0	0	<S:6> = <init>{56}	 -> 	[16]<S:6>.replace('B', 'C'){471}	 -> 	[25]<S:16>.replace('C', 'B'){350}	 -> 	[67]<S:25>.contains(""){1155}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are []
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are [[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]]
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]]
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
Parents  [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61] are []
Parents  [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1] are []
Parents  [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [65] 	EQUALS         	BASE(N): [27] 		ARG: [64] are []
Parents  [66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]]
Parents  [67] 	PREDICATE      	BASE(N): [25] 		ARG: [66] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-61
[IGEN] [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]	contains!!Ljava/lang/CharSequence;!:!0(0)-62
[IGEN] [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]	isEmpty!!!:!0(0)-63
[IGEN] [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-64
[IGEN] [65] 	EQUALS         	BASE(N): [27] 		ARG: [64]	equals!!Ljava/lang/Object;!:!0(0)-65
[IGEN] [66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-66
[IGEN] [67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]	contains!!Ljava/lang/CharSequence;!:!0(0)-67
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 67]
Q [36, 42, 46, 47, 55, 63, 67]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 67]
actuall [1, 2, 66, 35, 3, 67, 36, 6, 42, 12, 45, 46, 14, 47, 16, 21, 54, 55, 25, 26, 63]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [26, 12, 14]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [16, 21, 25]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [12, 14, 16, 21, 25, 26]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [17, 33, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [16, 36, 12, 14]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [46]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [21, 26, 47]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 [25, 42]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 []
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [62]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 [55]
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 []
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 []
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 [67]
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 [67]
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [63]
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 [63]
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 [65]
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 []
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [36]
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [46]
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [55]
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [62]
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]1 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]2 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]1 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]2 []
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [65]
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]1 []
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]2 []
[66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [67]
[66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [67]
[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]1 []
[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]2 []
node: [67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]
parents are: []

BFS EVALUATE PREDICATE 67 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [67]
EVALUATE CONCRETE VALUE 66 ...
reslut [true,true]
node: [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 63 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]
parents are: []

BFS EVALUATE PREDICATE 55 ...
original is null
reslut [true,true]
node: [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [55]
EVALUATE CONCRETE VALUE 54 ...
reslut [true,true]
node: [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 47 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]
parents are: []

BFS EVALUATE PREDICATE 46 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [46]
EVALUATE CONCRETE VALUE 45 ...
reslut [true,true]
node: [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 42 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]
parents are: []

BFS EVALUATE PREDICATE 36 ...
original is null
reslut [true,true]
node: [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [36]
EVALUATE CONCRETE VALUE 35 ...
reslut [true,true]
node: [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]
parents are: [63]
EVALUATE TREPLACE CHAR 26 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]
parents are: [67]
EVALUATE TREPLACE CHAR 25 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]
parents are: [55]
EVALUATE TREPLACE CHAR 21 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [25, 42]
EVALUATE TREPLACE CHAR 16 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [21, 26, 47]
EVALUATE TREPLACE CHAR 14 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace A
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]
parents are: [46]
EVALUATE TREPLACE CHAR 12 ...
resModel [AA, CC, A, AC, C, CA]
find A replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [16, 36, 12, 14]
EVALUATE INPUT 6 ...
DEBUG INIT_SYM 6 solutions .... AA CC A AC C CA 
reslut [true,true]

SOLUTION TIME ms: 4
INPUT ID: 6  COUNT: 6  VALUE(S): AA CC A AC C CA 
[IGEN] Outputting to solution file: ./temp/solutions.txt
[IGEN] 68	false	false	true	true	yes	22	3	1	2	0	<S:7> = <init>{55}	 -> 	[11]<S:7>.replace('B', 'C'){639}	 -> 	[22]<S:11>.replace('C', 'A'){447}	 -> 	[68]<S:22>.isEmpty(){1169}
Parents  [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1], [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1], [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]]
Parents  [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32], [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1], [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]]
Parents  [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1], [36] 	EQUALS         	BASE(N): [6] 		ARG: [35], [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]]
Parents  [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1], [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1], [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]]
Parents  [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1], [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1], [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]]
Parents  [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43], [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1], [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]]
Parents  [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38], [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]]
Parents  [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1], [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1], [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]]
Parents  [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48], [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]]
Parents  [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1] are [[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1], [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]]
Parents  [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1] are [[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1], [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]]
Parents  [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1] are [[68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1]]
Parents  [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1] are [[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]]
Parents  [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1] are [[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]]
Parents  [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1] are [[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]]
Parents  [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1] are [[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]]
Parents  [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1] are []
Parents  [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]]
Parents  [31] 	EQUALS         	BASE(N): [8] 		ARG: [30] are []
Parents  [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]]
Parents  [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32] are []
Parents  [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1] are []
Parents  [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]]
Parents  [36] 	EQUALS         	BASE(N): [6] 		ARG: [35] are []
Parents  [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1] are []
Parents  [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]]
Parents  [39] 	EQUALS         	BASE(N): [13] 		ARG: [38] are []
Parents  [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]]
Parents  [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40] are []
Parents  [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1] are []
Parents  [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]]
Parents  [44] 	EQUALS         	BASE(N): [11] 		ARG: [43] are []
Parents  [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]]
Parents  [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45] are []
Parents  [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1] are []
Parents  [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]]
Parents  [49] 	EQUALS         	BASE(N): [15] 		ARG: [48] are []
Parents  [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]]
Parents  [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50] are []
Parents  [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1] are []
Parents  [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1] are []
Parents  [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]]
Parents  [55] 	EQUALS         	BASE(N): [21] 		ARG: [54] are []
Parents  [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]]
Parents  [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56] are []
Parents  [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1] are []
Parents  [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]]
Parents  [60] 	EQUALS         	BASE(N): [19] 		ARG: [59] are []
Parents  [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]]
Parents  [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61] are []
Parents  [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1] are []
Parents  [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]]
Parents  [65] 	EQUALS         	BASE(N): [27] 		ARG: [64] are []
Parents  [66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1] are [[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]]
Parents  [67] 	PREDICATE      	BASE(N): [25] 		ARG: [66] are []
Parents  [68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1] are []
[IGEN] 
[IGEN] Inverse Constraint Set:
[IGEN] [1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-1
[IGEN] [2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-2
[IGEN] [3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"C"!:!<init>(0)-3
[IGEN] [4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r4!:!getStringValue!!(0)-4
[IGEN] [5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r5!:!getStringValue!!(0)-5
[IGEN] [6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r6!:!getStringValue!!(0)-6
[IGEN] [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r7!:!getStringValue!!(0)-7
[IGEN] [8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]	r8!:!getStringValue!!(0)-8
[IGEN] [9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-9
[IGEN] [10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-10
[IGEN] [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-11
[IGEN] [12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-12
[IGEN] [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-13
[IGEN] [14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-14
[IGEN] [15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]	replace!!CC!:!0(0)-15
[IGEN] [16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]	replace!!CC!:!0(0)-16
[IGEN] [17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]	replace!!CC!:!0(0)-17
[IGEN] [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]	replace!!CC!:!0(0)-18
[IGEN] [19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]	replace!!CC!:!0(0)-19
[IGEN] [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-20
[IGEN] [21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-21
[IGEN] [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]	replace!!CC!:!0(0)-22
[IGEN] [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]	replace!!CC!:!0(0)-23
[IGEN] [24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]	replace!!CC!:!0(0)-24
[IGEN] [25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]	replace!!CC!:!0(0)-25
[IGEN] [26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]	replace!!CC!:!0(0)-26
[IGEN] [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]	replace!!CC!:!0(0)-27
[IGEN] [28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]	replace!!CC!:!0(0)-28
[IGEN] [29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]	isEmpty!!!:!0(0)-29
[IGEN] [30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-30
[IGEN] [31] 	EQUALS         	BASE(N): [8] 		ARG: [30]	equals!!Ljava/lang/Object;!:!0(0)-31
[IGEN] [32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-32
[IGEN] [33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]	contains!!Ljava/lang/CharSequence;!:!0(0)-33
[IGEN] [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]	isEmpty!!!:!0(0)-34
[IGEN] [35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-35
[IGEN] [36] 	EQUALS         	BASE(N): [6] 		ARG: [35]	equals!!Ljava/lang/Object;!:!0(0)-36
[IGEN] [37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]	isEmpty!!!:!0(0)-37
[IGEN] [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-38
[IGEN] [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]	equals!!Ljava/lang/Object;!:!0(0)-39
[IGEN] [40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-40
[IGEN] [41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]	contains!!Ljava/lang/CharSequence;!:!0(0)-41
[IGEN] [42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]	isEmpty!!!:!0(0)-42
[IGEN] [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-43
[IGEN] [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]	equals!!Ljava/lang/Object;!:!0(0)-44
[IGEN] [45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-45
[IGEN] [46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]	contains!!Ljava/lang/CharSequence;!:!0(0)-46
[IGEN] [47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]	isEmpty!!!:!0(0)-47
[IGEN] [48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"CB"!:!<init>(0)-48
[IGEN] [49] 	EQUALS         	BASE(N): [15] 		ARG: [48]	equals!!Ljava/lang/Object;!:!0(0)-49
[IGEN] [50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-50
[IGEN] [51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]	contains!!Ljava/lang/CharSequence;!:!0(0)-51
[IGEN] [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]	isEmpty!!!:!0(0)-52
[IGEN] [53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]	isEmpty!!!:!0(0)-53
[IGEN] [54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BC"!:!<init>(0)-54
[IGEN] [55] 	EQUALS         	BASE(N): [21] 		ARG: [54]	equals!!Ljava/lang/Object;!:!0(0)-55
[IGEN] [56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"AA"!:!<init>(0)-56
[IGEN] [57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]	contains!!Ljava/lang/CharSequence;!:!0(0)-57
[IGEN] [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]	isEmpty!!!:!0(0)-58
[IGEN] [59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"BB"!:!<init>(0)-59
[IGEN] [60] 	EQUALS         	BASE(N): [19] 		ARG: [59]	equals!!Ljava/lang/Object;!:!0(0)-60
[IGEN] [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"B"!:!<init>(0)-61
[IGEN] [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]	contains!!Ljava/lang/CharSequence;!:!0(0)-62
[IGEN] [63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]	isEmpty!!!:!0(0)-63
[IGEN] [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	"A"!:!<init>(0)-64
[IGEN] [65] 	EQUALS         	BASE(N): [27] 		ARG: [64]	equals!!Ljava/lang/Object;!:!0(0)-65
[IGEN] [66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]	""!:!<init>(0)-66
[IGEN] [67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]	contains!!Ljava/lang/CharSequence;!:!0(0)-67
[IGEN] [68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1]	isEmpty!!!:!0(0)-68
[IGEN] 
Solving using BFS
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 67, 68]
Q [34, 39, 44, 52, 58, 62, 65, 68]
[29, 31, 33, 34, 36, 37, 39, 41, 42, 44, 46, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 65, 67, 68]
actuall [64, 1, 65, 34, 2, 3, 68, 38, 7, 39, 11, 43, 44, 13, 18, 52, 20, 22, 23, 58, 27, 61, 62]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [17, 18, 19, 22, 23, 24, 9, 26, 27, 12, 28, 14]
[1] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [18, 22, 23, 27]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [9, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 27, 28]
[2] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 20, 23, 27]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26]
[3] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [11, 13, 18, 20, 22]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [10, 29, 15]
[4] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [33, 17, 9]
[5] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [16, 36, 12, 14]
[6] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [34, 18, 11, 13]
[7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 [34, 18, 11, 13]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]1 [31]
[8] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]2 []
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [19, 41]
[9] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [37, 24]
[10] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [20, 22, 44]
[11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [20, 22, 44]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [46]
[12] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [39, 27]
[13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [39, 27]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [21, 26, 47]
[14] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]1 [49, 28]
[15] 	REPLACE_CHAR_CHAR	BASE(N): [4] 		ARG: [-1]2 []
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]1 [25, 42]
[16] 	REPLACE_CHAR_CHAR	BASE(N): [6] 		ARG: [-1]2 []
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]1 [51]
[17] 	REPLACE_CHAR_CHAR	BASE(N): [5] 		ARG: [-1]2 []
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]1 [52, 23]
[18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]2 [52, 23]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]1 [60]
[19] 	REPLACE_CHAR_CHAR	BASE(N): [9] 		ARG: [-1]2 []
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [62]
[20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 [62]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [55]
[21] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]1 [68]
[22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]2 [68]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]1 [58]
[23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]2 [58]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]1 [57]
[24] 	REPLACE_CHAR_CHAR	BASE(N): [10] 		ARG: [-1]2 []
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]1 [67]
[25] 	REPLACE_CHAR_CHAR	BASE(N): [16] 		ARG: [-1]2 []
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]1 [63]
[26] 	REPLACE_CHAR_CHAR	BASE(N): [14] 		ARG: [-1]2 []
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]1 [65]
[27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]2 [65]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]1 [53]
[28] 	REPLACE_CHAR_CHAR	BASE(N): [15] 		ARG: [-1]2 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]1 []
[29] 	PREDICATE      	BASE(N): [4] 		ARG: [-1]2 []
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [31]
[30] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]1 []
[31] 	EQUALS         	BASE(N): [8] 		ARG: [30]2 []
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [33]
[32] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]1 []
[33] 	PREDICATE      	BASE(N): [5] 		ARG: [32]2 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]1 []
[34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]2 []
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [36]
[35] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]1 []
[36] 	EQUALS         	BASE(N): [6] 		ARG: [35]2 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]1 []
[37] 	PREDICATE      	BASE(N): [10] 		ARG: [-1]2 []
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [39]
[38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [39]
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]1 []
[39] 	EQUALS         	BASE(N): [13] 		ARG: [38]2 []
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [41]
[40] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]1 []
[41] 	PREDICATE      	BASE(N): [9] 		ARG: [40]2 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]1 []
[42] 	PREDICATE      	BASE(N): [16] 		ARG: [-1]2 []
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [44]
[43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [44]
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]1 []
[44] 	EQUALS         	BASE(N): [11] 		ARG: [43]2 []
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [46]
[45] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]1 []
[46] 	PREDICATE      	BASE(N): [12] 		ARG: [45]2 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]1 []
[47] 	PREDICATE      	BASE(N): [14] 		ARG: [-1]2 []
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [49]
[48] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]1 []
[49] 	EQUALS         	BASE(N): [15] 		ARG: [48]2 []
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [51]
[50] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]1 []
[51] 	PREDICATE      	BASE(N): [17] 		ARG: [50]2 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]1 []
[52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]2 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]1 []
[53] 	PREDICATE      	BASE(N): [28] 		ARG: [-1]2 []
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [55]
[54] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]1 []
[55] 	EQUALS         	BASE(N): [21] 		ARG: [54]2 []
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [57]
[56] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]1 []
[57] 	PREDICATE      	BASE(N): [24] 		ARG: [56]2 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]1 []
[58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]2 []
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [60]
[59] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]1 []
[60] 	EQUALS         	BASE(N): [19] 		ARG: [59]2 []
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [62]
[61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [62]
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]1 []
[62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]2 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]1 []
[63] 	PREDICATE      	BASE(N): [26] 		ARG: [-1]2 []
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [65]
[64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 [65]
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]1 []
[65] 	EQUALS         	BASE(N): [27] 		ARG: [64]2 []
[66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]1 [67]
[66] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]2 []
[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]1 []
[67] 	PREDICATE      	BASE(N): [25] 		ARG: [66]2 []
[68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1]1 []
[68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1]2 []
node: [68] 	PREDICATE      	BASE(N): [22] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 68 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [65] 	EQUALS         	BASE(N): [27] 		ARG: [64]
parents are: []

BFS EVALUATE PREDICATE 65 ...
original is null
reslut [true,true]
node: [64] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [65]
EVALUATE CONCRETE VALUE 64 ...
reslut [true,true]
node: [62] 	PREDICATE      	BASE(N): [20] 		ARG: [61]
parents are: []

BFS EVALUATE PREDICATE 62 ...
arg INIT_CON
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [61] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [62]
EVALUATE CONCRETE VALUE 61 ...
reslut [true,true]
node: [58] 	PREDICATE      	BASE(N): [23] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 58 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [52] 	PREDICATE      	BASE(N): [18] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 52 ...
arg null
oper REPLACE_CHAR_CHAR
reslut [true,true]
node: [44] 	EQUALS         	BASE(N): [11] 		ARG: [43]
parents are: []

BFS EVALUATE PREDICATE 44 ...
original is null
reslut [true,true]
node: [43] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [44]
EVALUATE CONCRETE VALUE 43 ...
reslut [true,true]
node: [39] 	EQUALS         	BASE(N): [13] 		ARG: [38]
parents are: []

BFS EVALUATE PREDICATE 39 ...
original is null
reslut [true,true]
node: [38] 	INIT_CON       	BASE(N): [-1] 		ARG: [-1]
parents are: [39]
EVALUATE CONCRETE VALUE 38 ...
reslut [true,true]
node: [34] 	PREDICATE      	BASE(N): [7] 		ARG: [-1]
parents are: []

BFS EVALUATE PREDICATE 34 ...
arg null
oper INIT_SYM
reslut [true,true]
node: [27] 	REPLACE_CHAR_CHAR	BASE(N): [13] 		ARG: [-1]
parents are: [65]
EVALUATE TREPLACE CHAR 27 ...
resModel [AA, BB, A, AB, B, BA]
find A replace B
resModelInter [AA, BB, A, AB, B, BA]
reslut [true,true]
node: [23] 	REPLACE_CHAR_CHAR	BASE(N): [18] 		ARG: [-1]
parents are: [58]
EVALUATE TREPLACE CHAR 23 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace A
resModelInter [BB, CC, BC, B, C, CB]
reslut [true,true]
node: [22] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]
parents are: [68]
EVALUATE TREPLACE CHAR 22 ...
resModel [AA, CC, A, AC, C, CA]
find C replace A
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [20] 	REPLACE_CHAR_CHAR	BASE(N): [11] 		ARG: [-1]
parents are: [62]
EVALUATE TREPLACE CHAR 20 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, CC, A, AC, C, CA]
reslut [true,true]
node: [18] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [52, 23]
EVALUATE TREPLACE CHAR 18 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find A replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [13] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [39, 27]
EVALUATE TREPLACE CHAR 13 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find C replace B
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [11] 	REPLACE_CHAR_CHAR	BASE(N): [7] 		ARG: [-1]
parents are: [20, 22, 44]
EVALUATE TREPLACE CHAR 11 ...
resModel [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
find B replace C
resModelInter [AA, BB, CC, A, AB, BC, AC, B, C, CA, BA, CB]
reslut [true,true]
node: [7] 	INIT_SYM       	BASE(N): [-1] 		ARG: [-1]
parents are: [34, 18, 11, 13]
EVALUATE INPUT 7 ...
DEBUG INIT_SYM 7 solutions .... AA BB CC A AB BC AC B C CA BA CB 
reslut [true,true]

SOLUTION TIME ms: 4
INPUT ID: 7  COUNT: 12  VALUE(S): AA BB CC A AB BC AC B C CA BA CB 
[IGEN] Outputting to solution file: ./temp/solutions.txt
