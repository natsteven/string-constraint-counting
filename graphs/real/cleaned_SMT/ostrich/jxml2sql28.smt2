(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun r1[$i2] () String)
(declare-fun $r3 () String)
(declare-fun L13  () String)
(declare-fun L9  () String)
(declare-fun L63  () String)
(declare-fun L96  () String)
(declare-fun L5  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L61  () String)
(declare-fun L0  () String)
(declare-fun L29  () String)
(assert (toLower "option"  L29 ))
(assert (toLower $r3  L0 ))
(assert (toLower "database"  L61 ))
(assert (toLower "length"  L1 ))
(assert (toLower "description"  L3 ))
(assert (toLower "type"  L5 ))
(assert (toLower r1[$i2]  L96 ))
(assert (toLower "field"  L63 ))
(assert (toLower "name"  L9 ))
(assert (toLower "table"  L13 ))

(assert (= L0 L1 ))
(assert (not (= L0 L3 )))
(assert (= L0 L5 ))
(assert (not (= L0 L3 )))
(assert (= L0 L9 ))
(assert (not (= L0 L1 )))
(assert (not (= L0 L13 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L5 )))
(assert (not (= L0 L5 )))
(assert (= L0 L9 ))
(assert (not (= L0 L3 )))
(assert (= L0 L29 ))
(assert (not (= L0 L9 )))
(assert (not (= L0 L1 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L5 )))
(assert (not (= L0 L3 )))
(assert (= L0 L3 ))
(assert (= L0 L5 ))
(assert (= L0 L3 ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L9 )))
(assert (= L0 L61 ))
(assert (= L0 L63 ))
(assert (not (= L0 L9 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L63 )))
(assert (not (= L0 L9 )))
(assert (= L0 L29 ))
(assert (= L0 L1 ))
(assert (not (= L0 L9 )))
(assert (= L0 L3 ))
(assert (= L0 L9 ))
(assert (= L0 L63 ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L9 )))
(assert (= L0 L13 ))
(assert (= L0 L29 ))
(assert (not (= L0 L5 )))
(assert (not (= L0 L3 )))
(assert (not (= L96 "sql" )))
(assert (= L0 L3 ))
(assert (not (= L0 L5 )))
(assert (not (= L0 L1 )))
(assert (= L96 "html" ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L9 )))
(assert (not (= L0 L3 )))
(assert (= L0 L9 ))
(assert (not (= L0 L9 )))
(assert (not (= L0 L9 )))
(check-sat)
(get-model)
(exit)
