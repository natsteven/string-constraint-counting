(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun r1[$i2] () String)
(declare-fun $r3 () String)
(declare-fun L36  () String)
(declare-fun L69  () String)
(declare-fun L7  () String)
(declare-fun L10  () String)
(declare-fun L32  () String)
(declare-fun L44  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L0  () String)
(declare-fun L18  () String)
(assert (toLower "description"  L18 ))
(assert (toLower $r3  L0 ))
(assert (toLower "database"  L1 ))
(assert (toLower "name"  L3 ))
(assert (toLower "length"  L44 ))
(assert (toLower "option"  L32 ))
(assert (toLower r1[$i2]  L10 ))
(assert (toLower "type"  L7 ))
(assert (toLower "table"  L69 ))
(assert (toLower "field"  L36 ))

(assert (= L0 L1 ))
(assert (= L0 L3 ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L7 )))
(assert (= L0 L3 ))
(assert (= L10 "html" ))
(assert (not (= L0 L7 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L7 )))
(assert (not (= L0 L18 )))
(assert (= L0 L18 ))
(assert (not (= L0 L18 )))
(assert (= L0 L18 ))
(assert (not (= L0 L18 )))
(assert (not (= L0 L7 )))
(assert (= L0 L18 ))
(assert (= L0 L32 ))
(assert (= L0 L7 ))
(assert (= L0 L36 ))
(assert (not (= L0 L18 )))
(assert (not (= L0 L18 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L44 )))
(assert (not (= L0 L3 )))
(assert (= L0 L7 ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L18 )))
(assert (= L0 L36 ))
(assert (not (= L0 L18 )))
(assert (not (= L10 "sql" )))
(assert (not (= L0 L18 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L44 )))
(assert (not (= L0 L3 )))
(assert (= L0 L69 ))
(assert (= L0 L3 ))
(assert (not (= L0 L18 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L69 )))
(assert (not (= L0 L3 )))
(assert (= L0 L44 ))
(assert (= L0 L3 ))
(assert (not (= L0 L18 )))
(assert (= L0 L32 ))
(assert (not (= L0 L36 )))
(assert (= L0 L32 ))
(assert (not (= L0 L18 )))
(assert (not (= L0 L3 )))
(assert (not (= L0 L3 )))
(assert (= L0 L3 ))
(assert (= L0 L18 ))
(assert (not (= L0 L3 )))
(assert (not (= L0 L44 )))
(check-sat)
(get-model)
(exit)
