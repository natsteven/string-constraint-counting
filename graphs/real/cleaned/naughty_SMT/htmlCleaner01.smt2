(set-logic ALL)
(set-option :produce-models true)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))
(declare-fun sym4506 () String)
(declare-fun sym4516 () String)
(declare-fun sym4923 () String)
(declare-fun sym4954 () String)
(declare-fun sym4511 () String)
(declare-fun sym4367 () String)

(assert (not (= "head" (str.toLower sym4367 ))))
(assert (not (str.contains (str.toLower (str.len (str.at (str.len (str.len (str.++ (str.++ (str.++ "" sym4506 )sym4511 )sym4516 ))) 2)))":" )))
(assert (= (str.toLower (str.len (str.at (str.len (str.len (str.++ (str.++ (str.++ "" sym4506 )sym4511 )sym4516 ))) 2)))(str.toLower sym4367 )))
(assert (not (str.contains (str.toLower sym4367 )":" )))
(assert (not (= "html" (str.toLower sym4367 ))))
(assert (= sym4923 sym4954 ))
(assert (= (str.toLower sym4367 )(str.toLower sym4367 )))
(assert (not (str.contains (str.toLower sym4367 )":" )))
(assert (not (= "body" (str.toLower sym4367 ))))
(assert (not (str.contains (str.toLower sym4367 )":" )))
(check-sat)
(get-model)
(exit)
